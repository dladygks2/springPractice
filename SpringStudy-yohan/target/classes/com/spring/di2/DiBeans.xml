<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- @Autowired에서 사용되는 것 -->
	<!-- <context:annotation-config></context:annotation-config> -->
	
	<!-- @Component에서 사용되는 것. IoC에 등록하기 위해서 사용하는 것  -->
	<context:component-scan base-package="com.spring.di2"></context:component-scan>

	<!-- tvremotecontrol 객체를 만들거란다. -->
	<!-- 
	bean id="c1" class="com.spring.di2.TvRemoteControl">
	TvRemoteControl 객체를 생성할 때, setter를 자동으로 해주어라. company 변수에 LG값을 담아라. 
		<property name="company" value="LG"></property>  
		property 는 변수이다. 변수가 getter랑 setter를 사용할 수 있따.
	</bean> 
	-->

	<!-- <bean id="c2" class="com.spring.di2.TvRemoteControl">
		<property name="company" value="SAMSUNG"></property>
	</bean>
	
	<bean id="c3" class="com.spring.di2.AirConditionerRemoteControl">
		<property name="company" value="SAMSUNG"></property>
	</bean> -->
	<!-- 객체를 bean이라고 한다. -->
	<!-- name = 변수값,  ref = reference 즉, 객체 -->
	<!-- 밑의 class로 객체를 생성하면 id의 이름으로 생성을 하겠다. -->
	<!-- 
	 <bean id="centralControl" class="com.spring.di2.CentralController2">
		 <constructor-arg name="control1" ref="c1"></constructor-arg>
		<constructor-arg name="control2" ref="c2"></constructor-arg>
		
	</bean> 
	 -->
<!-- 
ceontralControl이란 아이디에 class 경로를 담고, 
그 클래스 파일에있는 control1, control2를 각각 c1, c2로 명칭한다. 
 -->

</beans>
<!-- 
	여기서의 설정으로 객체의 설정을 변경시켜준다. DI 라고 한다. 의존성 주입이라고한다.
	DI
-->