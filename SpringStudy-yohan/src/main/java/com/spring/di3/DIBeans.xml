<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- 
		TvRemoteControl 클래스 객체를 생성해볼 것이다.
		Main.java에서 
		객체를 만들어내는 것이 아니고... 
	-->
	
	<!-- 
		밑의 코드가 있으면 @(어노테이션)을 먼저 확인한다. 그래서 발견되면 자동으로 처리를 해준다.
		@Autowired 를 위해서 필요한 코드
	 -->
	<!-- <context:annotation-config></context:annotation-config> -->
	
	<context:component-scan base-package="com.spring.di3"></context:component-scan>
	
	<bean id="centralControl" class="com.spring.di3.CentralController">
	
	</bean>
	<!--  
	
	
	<bean id="c1" class="com.spring.di3.TvRemoteControl">
		property는 변수이다. private String company;를 입력했었다. 
		'변수.메서드'의 형식으로 사용할 수 있겠다.  
		property는 생성이 되고나서 setter를 통해서 값을 넣는 것과 같다.
		<property name="company" value="LG"></property>
	</bean>
	
	<bean id="c2" class="com.spring.di3.AirConditionerRemoteControl">
		<property name="company" value="SAMSUNG"></property>
	</bean>
	
	<bean id="c3" class="com.spring.di3.AirConditionerRemoteControl">
		<property name="company" value="carrier"></property>
	</bean>

 -->	
 
 
 <!-- name은 매개변수명을 넣어주면 된다. control1과 control2를 만들었음-->
 
 <!-- 
	<bean id="centralControl" class="com.spring.di3.CentralController">
		
			c1은 위의 TvRemoteControl 부분이고, 그 만들어진 객체를 
			CentralController.java에서 만들어진 
			control1 변수에 담을 것이다.
			
			ref = reference // 객체를 의미한다.
		
		 
		 	constructor-arg 는 생성될 때 생성자를 통해서 생성됨
			매개변수를 2개 받기 때문에 2개를 넣어준 것이다.
			CentralController.java 에서 확인할 수 있다. 
		 
		  밑의 constructor-arg는 
		  해당 클래스에서 @Autowired @Qualifier("c1") 해서 생성된 것 
		  그래서 빨간 밑줄이 뜨는 것이다.
		 
		
		<constructor-arg name="control1" ref="c1"></constructor-arg>
		<constructor-arg name="control2" ref="c2"></constructor-arg>
		
	</bean>
 -->
 
 
 
</beans>
